/**
 * ููุฌู ุงูุฃุฎุทุงุก - ุณูุงุณุฉ ุฅุฏุงุฑุฉ ุงูุฃุฎุทุงุก ุงูููุญุฏุฉ
 * @fileoverview Unified error handling and routing system
 * @version 1.0.0
 * @since 3.0.0
 */
defineModule('Utils.ErrorRouter', function(injector) {
  
  return {
    /**
     * ุชูุฌูู ุงูุฎุทุฃ ุญุณุจ ุงูููุน ูุงูุดุฏุฉ
     * @param {Error} error - ูุงุฆู ุงูุฎุทุฃ
     * @param {Object} context - ุณูุงู ุงูุฎุทุฃ
     * @param {string} context.module - ุงุณู ุงููุญุฏุฉ
     * @param {string} context.function - ุงุณู ุงูุฏุงูุฉ
     * @param {string} context.severity - ุดุฏุฉ ุงูุฎุทุฃ (CRITICAL|HIGH|MEDIUM|LOW)
     * @returns {Object} ูุนูููุงุช ุชูุฌูู ุงูุฎุทุฃ
     * @example
     * errorRouter.routeError(new Error('ูุดู ูู ุงููุนุงูุฌุฉ'), {
     *   module: 'System.ToolExecutor',
     *   function: 'executeToolCalls',
     *   severity: 'HIGH'
     * });
     * @since 3.0.0
     */
    routeError(error, context = {}) {
      const errorInfo = {
        id: this.generateErrorId(),
        timestamp: new Date().toISOString(),
        error: {
          message: error.message,
          stack: error.stack,
          name: error.name
        },
        context: {
          module: context.module || 'UNKNOWN',
          function: context.function || 'UNKNOWN',
          severity: context.severity || 'MEDIUM',
          userId: this.getCurrentUserId(),
          sessionId: this.getSessionId()
        },
        routing: {
          logged: false,
          notified: false,
          escalated: false
        }
      };

      // ุชูุฌูู ุงูุฎุทุฃ ุญุณุจ ุงูุดุฏุฉ
      this.processErrorBySeverity(errorInfo);
      
      // ุชุณุฌูู ุงูุฎุทุฃ
      this.logError(errorInfo);
      
      // ุฅุดุนุงุฑ ุงููุทูุฑูู ุฅุฐุง ูุฒู ุงูุฃูุฑ
      if (this.shouldNotifyDevelopers(errorInfo)) {
        this.notifyDevelopers(errorInfo);
      }

      return errorInfo;
    },

    /**
     * ูุนุงูุฌุฉ ุงูุฎุทุฃ ุญุณุจ ุงูุดุฏุฉ
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @private
     */
    processErrorBySeverity(errorInfo) {
      const severity = errorInfo.context.severity;
      
      switch (severity) {
        case 'CRITICAL':
          this.handleCriticalError(errorInfo);
          break;
        case 'HIGH':
          this.handleHighSeverityError(errorInfo);
          break;
        case 'MEDIUM':
          this.handleMediumSeverityError(errorInfo);
          break;
        case 'LOW':
          this.handleLowSeverityError(errorInfo);
          break;
        default:
          this.handleUnknownSeverityError(errorInfo);
      }
    },

    /**
     * ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก ุงูุญุฑุฌุฉ
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @private
     */
    handleCriticalError(errorInfo) {
      // ุชุณุฌูู ููุฑู ูู Google Cloud Logging
      this.logToCloudLogging(errorInfo, 'ERROR');
      
      // ุฅููุงู ุงูุนูููุงุช ุบูุฑ ุงูุญุฑุฌุฉ
      this.pauseNonCriticalOperations();
      
      // ุฅุดุนุงุฑ ููุฑู ูููุทูุฑูู
      errorInfo.routing.escalated = true;
      errorInfo.routing.notified = true;
      
      console.error(`ุฎุทุฃ ุญุฑุฌ ูู ${errorInfo.context.module}:`, errorInfo.error.message);
    },

    /**
     * ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก ุนุงููุฉ ุงูุดุฏุฉ
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @private
     */
    handleHighSeverityError(errorInfo) {
      // ุชุณุฌูู ูู Cloud Logging
      this.logToCloudLogging(errorInfo, 'WARNING');
      
      // ูุญุงููุฉ ุงูุงุณุชุฑุฏุงุฏ ุงูุชููุงุฆู
      this.attemptAutoRecovery(errorInfo);
      
      errorInfo.routing.notified = true;
      
      console.warn(`ุฎุทุฃ ุนุงูู ุงูุดุฏุฉ ูู ${errorInfo.context.module}:`, errorInfo.error.message);
    },

    /**
     * ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก ูุชูุณุทุฉ ุงูุดุฏุฉ
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @private
     */
    handleMediumSeverityError(errorInfo) {
      // ุชุณุฌูู ูุญูู
      this.logToLocalStorage(errorInfo);
      
      console.log(`ุฎุทุฃ ูุชูุณุท ูู ${errorInfo.context.module}:`, errorInfo.error.message);
    },

    /**
     * ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก ููุฎูุถุฉ ุงูุดุฏุฉ
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @private
     */
    handleLowSeverityError(errorInfo) {
      // ุชุณุฌูู ุฃุณุงุณู ููุท
      console.debug(`ุฎุทุฃ ููุฎูุถ ูู ${errorInfo.context.module}:`, errorInfo.error.message);
    },

    /**
     * ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก ุบูุฑ ุงููุตููุฉ
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @private
     */
    handleUnknownSeverityError(errorInfo) {
      // ูุนุงููุฉ ูุฎุทุฃ ูุชูุณุท ุงูุดุฏุฉ
      errorInfo.context.severity = 'MEDIUM';
      this.handleMediumSeverityError(errorInfo);
    },

    /**
     * ุชุณุฌูู ุงูุฎุทุฃ ูู Google Cloud Logging
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @param {string} level - ูุณุชูู ุงูุณุฌู
     * @private
     */
    logToCloudLogging(errorInfo, level) {
      try {
        const logger = injector.get('Utils.SystemLogger');
        logger.logToCloud(errorInfo, level);
        errorInfo.routing.logged = true;
      } catch (logError) {
        console.error('ูุดู ูู ุงูุชุณุฌูู ุงูุณุญุงุจู:', logError);
        this.logToLocalStorage(errorInfo);
      }
    },

    /**
     * ุชุณุฌูู ุงูุฎุทุฃ ูุญููุงู
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @private
     */
    logToLocalStorage(errorInfo) {
      try {
        const errorLog = this.getErrorLog();
        errorLog.push(errorInfo);
        
        // ุงูุงุญุชูุงุธ ุจุขุฎุฑ 100 ุฎุทุฃ ููุท
        if (errorLog.length > 100) {
          errorLog.splice(0, errorLog.length - 100);
        }
        
        PropertiesService.getScriptProperties().setProperty(
          'error_log',
          JSON.stringify(errorLog)
        );
        
        errorInfo.routing.logged = true;
      } catch (storageError) {
        console.error('ูุดู ูู ุงูุชุณุฌูู ุงููุญูู:', storageError);
      }
    },

    /**
     * ุงูุญุตูู ุนูู ุณุฌู ุงูุฃุฎุทุงุก
     * @returns {Array} ูุงุฆูุฉ ุงูุฃุฎุทุงุก ุงููุณุฌูุฉ
     * @private
     */
    getErrorLog() {
      try {
        const savedLog = PropertiesService.getScriptProperties().getProperty('error_log');
        return savedLog ? JSON.parse(savedLog) : [];
      } catch (error) {
        return [];
      }
    },

    /**
     * ุชุญุฏูุฏ ูุง ุฅุฐุง ูุงู ูุฌุจ ุฅุดุนุงุฑ ุงููุทูุฑูู
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @returns {boolean} ูู ูุฌุจ ุงูุฅุดุนุงุฑ
     * @private
     */
    shouldNotifyDevelopers(errorInfo) {
      const severity = errorInfo.context.severity;
      return ['CRITICAL', 'HIGH'].includes(severity);
    },

    /**
     * ุฅุดุนุงุฑ ุงููุทูุฑูู
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @private
     */
    notifyDevelopers(errorInfo) {
      try {
        // ูุญุงูุงุฉ ุฅุฑุณุงู ุฅุดุนุงุฑ (ูููู ุชุทููุฑู ูุงุญูุงู)
        console.error(`๐จ ุฅุดุนุงุฑ ูููุทูุฑูู - ุฎุทุฃ ${errorInfo.context.severity}:`, {
          module: errorInfo.context.module,
          function: errorInfo.context.function,
          message: errorInfo.error.message,
          timestamp: errorInfo.timestamp
        });
        
        errorInfo.routing.notified = true;
      } catch (notificationError) {
        console.error('ูุดู ูู ุฅุดุนุงุฑ ุงููุทูุฑูู:', notificationError);
      }
    },

    /**
     * ุฅููุงู ุงูุนูููุงุช ุบูุฑ ุงูุญุฑุฌุฉ
     * @private
     */
    pauseNonCriticalOperations() {
      try {
        // ุชุนููู ุนูุงูุฉ ูุฅููุงู ุงูุนูููุงุช ุบูุฑ ุงูุญุฑุฌุฉ
        PropertiesService.getScriptProperties().setProperty(
          'system_emergency_mode',
          'true'
        );
        
        console.warn('ุชู ุชูุนูู ูุถุน ุงูุทูุงุฑุฆ - ุฅููุงู ุงูุนูููุงุช ุบูุฑ ุงูุญุฑุฌุฉ');
      } catch (error) {
        console.error('ูุดู ูู ุชูุนูู ูุถุน ุงูุทูุงุฑุฆ:', error);
      }
    },

    /**
     * ูุญุงููุฉ ุงูุงุณุชุฑุฏุงุฏ ุงูุชููุงุฆู
     * @param {Object} errorInfo - ูุนูููุงุช ุงูุฎุทุฃ
     * @private
     */
    attemptAutoRecovery(errorInfo) {
      try {
        // ุงุณุชุฑุงุชูุฌูุงุช ุงูุงุณุชุฑุฏุงุฏ ุญุณุจ ููุน ุงูุฎุทุฃ
        const module = errorInfo.context.module;
        
        if (module.includes('Storage')) {
          this.recoverStorageIssues();
        } else if (module.includes('AI')) {
          this.recoverAIServiceIssues();
        }
        
        console.log('ุชู ูุญุงููุฉ ุงูุงุณุชุฑุฏุงุฏ ุงูุชููุงุฆู');
      } catch (recoveryError) {
        console.error('ูุดู ูู ุงูุงุณุชุฑุฏุงุฏ ุงูุชููุงุฆู:', recoveryError);
      }
    },

    /**
     * ุงุณุชุฑุฏุงุฏ ูุดุงูู ุงูุชุฎุฒูู
     * @private
     */
    recoverStorageIssues() {
      // ุชูุธูู ุงูุจูุงูุงุช ุงููุคูุชุฉ
      // ุฅุนุงุฏุฉ ุชููุฆุฉ ุงูุงุชุตุงูุงุช
    },

    /**
     * ุงุณุชุฑุฏุงุฏ ูุดุงูู ุฎุฏูุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู
     * @private
     */
    recoverAIServiceIssues() {
      // ุฅุนุงุฏุฉ ุชุนููู ุงูุงุชุตุงูุงุช
      // ุงูุชุจุฏูู ุฅูู ุฎุฏูุฉ ุงุญุชูุงุทูุฉ
    },

    /**
     * ุชูููุฏ ูุนุฑู ูุฑูุฏ ููุฎุทุฃ
     * @returns {string} ูุนุฑู ุงูุฎุทุฃ
     * @private
     */
    generateErrorId() {
      return `ERR_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    },

    /**
     * ุงูุญุตูู ุนูู ูุนุฑู ุงููุณุชุฎุฏู ุงูุญุงูู
     * @returns {string} ูุนุฑู ุงููุณุชุฎุฏู
     * @private
     */
    getCurrentUserId() {
      try {
        return Session.getActiveUser().getEmail();
      } catch (error) {
        return 'UNKNOWN_USER';
      }
    },

    /**
     * ุงูุญุตูู ุนูู ูุนุฑู ุงูุฌูุณุฉ
     * @returns {string} ูุนุฑู ุงูุฌูุณุฉ
     * @private
     */
    getSessionId() {
      try {
        let sessionId = PropertiesService.getTemporaryProperties().getProperty('session_id');
        if (!sessionId) {
          sessionId = `SESSION_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
          PropertiesService.getTemporaryProperties().setProperty('session_id', sessionId);
        }
        return sessionId;
      } catch (error) {
        return 'UNKNOWN_SESSION';
      }
    }
  };
});

/**
 * ุฏุงูุฉ ุนุงูุฉ ูุชูุฌูู ุงูุฃุฎุทุงุก
 * @param {Error} error - ูุงุฆู ุงูุฎุทุฃ
 * @param {Object} context - ุณูุงู ุงูุฎุทุฃ
 * @returns {Object} ูุนูููุงุช ุชูุฌูู ุงูุฎุทุฃ
 * @example
 * routeError(new Error('ูุดู'), { module: 'System.Test', severity: 'HIGH' });
 * @since 3.0.0
 */
function routeError(error, context = {}) {
  try {
    const router = GAssistant.Utils.Injector.get('Utils.ErrorRouter');
    return router.routeError(error, context);
  } catch (routingError) {
    console.error('ูุดู ูู ุชูุฌูู ุงูุฎุทุฃ:', routingError);
    console.error('ุงูุฎุทุฃ ุงูุฃุตูู:', error);
    return null;
  }
}